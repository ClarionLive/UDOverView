[APPLICATION]
VERSION 34
TODO ABC ToDo
PROCEDURE Main
[COMMON]
FROM ABC
[PROMPTS]
%ClassItem UNIQUE DEFAULT  ('ErrorManager', 'ErrorStatusManager', 'FileManager:', |
  'FuzzyMatcher', 'INIManager', 'RelationManager:', 'Translator')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('ErrorClass')
WHEN  ('ErrorStatusManager') ('ErrorStatusClass')
WHEN  ('FuzzyMatcher') ('FuzzyClass')
WHEN  ('INIManager') ('INIClass')
WHEN  ('Translator') ('TranslatorClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('')
WHEN  ('ErrorStatusManager') ('')
WHEN  ('FuzzyMatcher') ('')
WHEN  ('INIManager') ('')
WHEN  ('Translator') ('')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 0

%ProgramAuthor DEFAULT  ('')
%ProgramIcon DEFAULT  ('UDOverView.ico')
%MessageDescription LONG  (1)
%GlobalExternal LONG  (0)
%ExternalSource DEFAULT  ('Dynamic Link Library (DLL)')
%GenerateEmbedComments LONG  (0)
%INIType DEFAULT  ('NVD_INI')
%INIFile DEFAULT  ('Program Name.INI')
%ININame DEFAULT  ('')
%INIInAppDirectory LONG  (1)
%REGRoot DEFAULT  ('REG_CLASSES_ROOT')
%DisableINISaveWindow LONG  (0)
%PreserveVars MULTI LONG  ()
%PreserveVar DEPEND %PreserveVars DEFAULT TIMES 0

%EnableRunTimeTranslator LONG  (0)
%FuzzyMatchingEnabled LONG  (1)
%IgnoreCase LONG  (1)
%WordOnly LONG  (0)
%WindowFrameDragging LONG  (1)
%UseDefaultXPManifest LONG  (0)
%GenerateXPManifest LONG  (1)
%LinkGenerateXPManifest LONG  (1)
%AddVistaXPManifest LONG  (1)
%VistaManifestExecutionLevel DEFAULT  ('asInvoker')
%VistaManifestUIAccess LONG  (0)
%ExtUIXPMenuEnableGlobal LONG  (1)
%ExtUIXPMenuColorTypeGlobal DEFAULT  ('XPenergyBlue')
%ExtUIXPMenuColorLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorRightGlobal LONG  (12560039)
%ExtUIXPMenuColorSelectionBarLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectionBarRightGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectionBorderGlobal LONG  (15920364)
%ExtUIXPMenuColorHotLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorHotRightGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectedLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectedRightGlobal LONG  (15920364)
%ExtUIXPMenuFlat LONG  (1)
%ExtUIMDITabGlobal DEFAULT  ('DISABLE')
%ExtUIMDITabStyleGlobal DEFAULT  ('Default')
%ExtUITabStyleGlobal DEFAULT  ('Boxed')
%WindowEnableEnhanceFocus LONG  (0)
%SelectedText LONG  (1)
%SelectedRadio LONG  (1)
%SelectedSpin LONG  (1)
%SelectedCheck LONG  (1)
%SelectedDropList LONG  (1)
%SelectedList LONG  (1)
%SelectedDisplayChangeColor LONG  (1)
%SelectedColor LONG  (65535)
%SelectedStyle LONG  (1)
%SelectedRequired LONG  (0)
%SelectedRequiredColor LONG  (65535)
%SelectedDisplayBox LONG  (1)
%SelectedDisplayBoxFillColor LONG  (65535)
%SelectedDisplayBoxBorderColor LONG  (0)
%SelectedDisplayBoxBorderSize DEFAULT  ('2')
%SelectedRequiredBox LONG  (0)
%SelectedRequiredDisplayBoxFillColor LONG  (255)
%SelectedRequiredDisplayBoxBorderColor LONG  (0)
%SelectedCaret LONG  (1)
%SelectedCaretColor LONG  (8421504)
%SelectedCaretCharacter DEFAULT  ('»')
%SelectedCaretCharacterSeparation DEFAULT  ('8')
%ExcludeSelectedDropList LONG  (0)
%GlobalUseEnterInsteadTab LONG  (1)
%GlobalUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalUseEnterInsteadTabEnable DEFAULT  ('Enable')
%GlobalUseEnterInsteadTabEnableValue DEFAULT  ('True')
%GlobalEnableAutoSizeColumn LONG  (0)
%GlobalEnableListFormatManager LONG  (0)
%GlobalUserFieldListFormatManager DEFAULT  ('1')
%TableOrigin DEFAULT  ('Application')
%FileEquate DEFAULT  ('LFM_CFile')
%ConfigFilePRE DEFAULT  ('CFG')
%ConfigFileOEM LONG  (0)
%ConfigFileTHREAD LONG  (1)
%ConfigFileENCRYPT LONG  (0)
%ConfigFilePASSWORD DEFAULT  ('')
%FormatNameSize DEFAULT  ('30')
%FormatBufferSize DEFAULT  ('5120')
%VariableBufferSize DEFAULT  ('2048')
%UseConfigFileName DEFAULT  ('Default')
%ConfigFileVariable DEFAULT  ('')
%ConfigFilePath DEFAULT  ('')
%ConfigFileNAME DEFAULT  ('Formats.FDB')
%ColonCounter DEFAULT  ('')
%WrongSymbol DEFAULT  ('')
%DictionaryTableOrigin FILE  ()
%GlobalLFMSortOrderMenuText DEFAULT  ('SortOrder')
%GlobalEnableRebase LONG  (0)
%RBDMethod DEFAULT  ('Specify manually')
%RBDImageBase DEFAULT  ('10000000')
%DefaultGenerate LONG  (0)
%DefaultRILogout LONG  (1)
%LockRecoverTime DEFAULT  ('9')
%DefaultThreaded DEFAULT  ('Use File Setting')
%DefaultCreate DEFAULT  ('Use File Setting')
%DefaultExternal DEFAULT  ('None External')
%DefaultLocalExternal LONG  (0)
%DefaultExternalSource DEFAULT  ('')
%DefaultExternalAPP LONG  (0)
%DefaultExport LONG  (0)
%DefaultOpenMode DEFAULT  ('Share')
%DefaultUserAccess DEFAULT  ('Read/Write')
%DefaultOtherAccess DEFAULT  ('Deny None')
%DefaultLazyOpen LONG  (1)
%OverrideGenerate DEPEND %File LONG TIMES 0

%OverrideRILogout DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%GlobalObject DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('YES')
WHEN  ('ErrorStatusManager') ('YES')
WHEN  ('FuzzyMatcher') ('YES')
WHEN  ('INIManager') ('YES')
WHEN  ('Translator') ('YES')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('GlobalErrors')
WHEN  ('ErrorStatusManager') ('GlobalErrorsStatus')
WHEN  ('FuzzyMatcher') ('FuzzyMatcher')
WHEN  ('INIManager') ('INIMgr')
WHEN  ('Translator') ('Translator')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 5
WHEN  ('ErrorManager') (1)
WHEN  ('ErrorStatusManager') (1)
WHEN  ('FuzzyMatcher') (1)
WHEN  ('INIManager') (1)
WHEN  ('Translator') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 5
WHEN  ('ErrorManager') (1)
WHEN  ('ErrorStatusManager') (1)
WHEN  ('FuzzyMatcher') (1)
WHEN  ('INIManager') (1)
WHEN  ('Translator') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 5
WHEN  ('ErrorManager') ('')
WHEN  ('ErrorStatusManager') ('')
WHEN  ('FuzzyMatcher') ('')
WHEN  ('INIManager') ('')
WHEN  ('Translator') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 5
WHEN  ('ErrorManager') (0)
WHEN  ('ErrorStatusManager') (0)
WHEN  ('FuzzyMatcher') (0)
WHEN  ('INIManager') (0)
WHEN  ('Translator') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 2
WHEN  ('FuzzyMatcher')TIMES 0
WHEN  ('INIManager')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 2
WHEN  ('FuzzyMatcher')TIMES 0
WHEN  ('INIManager')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%OverrideThreaded DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideCreate DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideExternal DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideLocalExternal DEPEND %File LONG TIMES 0

%OverrideExternalSource DEPEND %File DEFAULT TIMES 0

%OverrideExternalAPP DEPEND %File LONG TIMES 0

%OverrideExport DEPEND %File LONG TIMES 0

%FileDeclarationMode DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use User Options')

%FileDeclarationType DEPEND %File LONG TIMES 1
WHEN  ('') (0)

%FileDeclarationThread DEPEND %File LONG TIMES 1
WHEN  ('') (0)

%FileDeclarationBindable DEPEND %File LONG TIMES 1
WHEN  ('') (1)

%FileDeclarationName DEPEND %File DEFAULT TIMES 0

%FileDeclarationOver DEPEND %File DEFAULT TIMES 0

%OverrideOpenMode DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideUserAccess DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideOtherAccess DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideLazyOpen DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%StandardExternalModule DEPEND %Module LONG TIMES 5
WHEN  ('') (1)
WHEN  ('UDOverView.clw') (1)
WHEN  ('UDOverView001.clw') (1)
WHEN  ('UDOverView002.clw') (1)
WHEN  ('UDOverView003.clw') (1)

%NoGenerateGlobals LONG  (0)
%WindowManagerType DEFAULT  ('WindowManager')
%ResetOnGainFocus LONG  (0)
%AutoToolbar LONG  (1)
%AutoRefresh LONG  (1)
%ImageClass DEFAULT  ('ImageManager')
%ErrorStatusManagerType DEFAULT  ('ErrorStatusClass')
%ErrorManagerType DEFAULT  ('ErrorClass')
%DefaultErrorCategory DEFAULT  ('ABC')
%AllowSelectCopy LONG  (0)
%StoreErrorHistory LONG  (0)
%LimitStoredHistory LONG  (0)
%ErrorHistoryThreshold DEFAULT  ('300')
%HistoryViewTrigger DEFAULT  ('Level:Fatal')
%PopupClass DEFAULT  ('PopupClass')
%SelectFileClass DEFAULT  ('SelectFileClass')
%ResizerType DEFAULT  ('WindowResizeClass')
%ResizerDeFaultFindParents LONG  (1)
%ResizerDefaultOptimizeMoves LONG  (1)
%ResizerDefaultOptimizeRedraws LONG  (1)
%INIClass DEFAULT  ('INIClass')
%RunTimeTranslatorType DEFAULT  ('TranslatorClass')
%ExtractionFilename DEFAULT  ('')
%TranslationGroups MULTI LONG  ()
%TranslationFile DEPEND %TranslationGroups DEFAULT TIMES 0

%TranslationGroup DEPEND %TranslationGroups DEFAULT TIMES 0

%CalendarManagerType DEFAULT  ('CalendarClass')
%GlobalChangeColor LONG  (0)
%GlobalColorSunday LONG  (255)
%GlobalColorSaturday LONG  (255)
%GlobalColorHoliday LONG  (32768)
%GlobalColorOther LONG  (0)
%GlobalSelectOnClose DEFAULT  ('Select')
%GlobalUseABCClasess LONG  (1)
%FileManagerType DEFAULT  ('FileManager')
%ViewManagerType DEFAULT  ('ViewManager')
%RelationManagerType DEFAULT  ('RelationManager')
%BrowserType DEFAULT  ('BrowseClass')
%ActiveInvisible LONG  (0)
%AllowUnfilled LONG  (0)
%RetainRow LONG  (1)
%FileDropManagerType DEFAULT  ('FileDropClass')
%FileDropComboManagerType DEFAULT  ('FileDropComboClass')
%FormVCRManagerType DEFAULT  ('FormVCRClass')
%BrowseEIPManagerType DEFAULT  ('BrowseEIPManager')
%EditInPlaceInterface DEFAULT  ('Original')
%EditInPlaceType DEFAULT  ('EditEntryClass')
%EditInPlaceEntryType DEFAULT  ('EditEntryClass')
%EditInPlaceTextType DEFAULT  ('EditTextClass')
%EditInPlaceCheckType DEFAULT  ('EditCheckClass')
%EditInPlaceSpinType DEFAULT  ('EditSpinClass')
%EditInPlaceDropListType DEFAULT  ('EditDropListClass')
%EditInPlaceDropComboType DEFAULT  ('EditDropComboClass')
%EditInPlaceColorType DEFAULT  ('EditColorClass')
%EditInPlaceFileType DEFAULT  ('EditFileClass')
%EditInPlaceFontType DEFAULT  ('EditFontClass')
%EditInPlaceMultiSelectType DEFAULT  ('EditMultiSelectClass')
%EditInPlaceCalendarType DEFAULT  ('EditCalendarClass')
%EditInPlaceLookupType DEFAULT  ('EditLookupClass')
%EditInPlaceOtherType DEFAULT  ('EditEntryClass')
%QBEFormType DEFAULT  ('QueryFormClass')
%QBEFormVisualType DEFAULT  ('QueryFormVisual')
%QBEListType DEFAULT  ('QueryListClass')
%QBEListVisualType DEFAULT  ('QueryListVisual')
%StepManagerType DEFAULT  ('StepClass')
%StepManagerLongType DEFAULT  ('StepLongClass')
%StepManagerRealType DEFAULT  ('StepRealClass')
%StepManagerStringType DEFAULT  ('StepStringClass')
%StepManagerCustomType DEFAULT  ('StepCustomClass')
%StepLocatorType DEFAULT  ('StepLocatorClass')
%EntryLocatorType DEFAULT  ('EntryLocatorClass')
%IncrementalLocatorType DEFAULT  ('IncrementalLocatorClass')
%FilteredLocatorType DEFAULT  ('FilterLocatorClass')
%FuzzyMatcherClass DEFAULT  ('FuzzyClass')
%GridClass DEFAULT  ('GridClass')
%SidebarClass DEFAULT  ('SidebarClass')
%ProcessType DEFAULT  ('ProcessClass')
%PrintPreviewType DEFAULT  ('PrintPreviewClass')
%ReportManagerType DEFAULT  ('ReportManager')
%ReportTargetSelectorManagerType DEFAULT  ('ReportTargetSelectorClass')
%BreakManagerType DEFAULT  ('BreakManagerClass')
%AsciiViewerClass DEFAULT  ('AsciiViewerClass')
%AsciiSearchClass DEFAULT  ('AsciiSearchClass')
%AsciiPrintClass DEFAULT  ('AsciiPrintClass')
%AsciiFileManagerType DEFAULT  ('AsciiFileClass')
%ToolbarClass DEFAULT  ('ToolbarClass')
%ToolbarListBoxType DEFAULT  ('ToolbarListboxClass')
%ToolbarRelTreeType DEFAULT  ('ToolbarReltreeClass')
%ToolbarUpdateClassType DEFAULT  ('ToolbarUpdateClass')
%ToolbarFormVCRType DEFAULT  ('ToolbarFormVCRClass')
%OverrideAbcSettings LONG  (0)
%AbcSourceLocation DEFAULT  ('LINK')
%AbcLibraryName DEFAULT  ('')
%AppTemplateFamily DEFAULT  ('ABC')
%CWTemplateVersion DEFAULT  ('v10.0')
%ABCVersion DEFAULT  ('10000')
%INIProgramIniLocation DEFAULT  ('APPDIR')
%INICSIDLDirectory DEFAULT  ('SV:CSIDL_PERSONAL')
%CSIDLCompanyDir DEFAULT  ('')
%CSIDLProductDir DEFAULT  ('')
%CSIDLCreate LONG  (0)
%ButtonMarginsCompatibility LONG  (0)
%NoThemedControlsDependency LONG  (0)
%VistaManifestDependentAssembly MULTI LONG  ()
%VistaManifestDependentAssemblyName DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyVersion DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyType DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyPublicKeyToken DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyLanguage DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyProcessorArchitecture DEPEND %VistaManifestDependentAssembly LONG TIMES 0

%W7ManifestVista LONG  (1)
%W7ManifestW7 LONG  (1)
%W7ManifestW8 LONG  (1)
%W7ManifestW81 LONG  (1)
%W7ManifestW10 LONG  (1)
%ForceMakeTransparentXPManifest LONG  (0)
%ForceMakeColorXPManifest LONG  (0)
%ForceSHEETNoTheme LONG  (0)
%ExtUIXPMenuDisableImageBar LONG  (1)
%ExtUIXPMenuEnableRuntime LONG  (0)
%ExtUIXPMenuRuntimeVar DEFAULT  ('')
%ExtUIXPMenuSelVertical LONG  (1)
%ExtUIXPMenuColorNormalBarLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorNormalBarRightGlobal LONG  (15920364)
%ExtUIXPMenuColorItemBackgroundGlobal LONG  (-2147483644)
%ExtUIXPMenuColorNormalText LONG  (0)
%ExtUIXPMenuColorSelectedText LONG  (0)
%ExtUIXPMenuColorHotText LONG  (0)
%ExtUIXPMenuShowImageBar LONG  (0)
%ExtUIXPMenuSeparator3D LONG  (1)
%ExtUIXPMenuSeparatorFull LONG  (0)
%ExtUIXPMenuVerticalLine LONG  (1)
%EnableOSK DEFAULT  ('OFF')
%GlobalInterLine DEFAULT  ('12')
%GeneratePropDataPath LONG  (0)
%PropDataPathLocation DEFAULT  ('CSIDLLIKEINI')
%DataPathCSIDLDirectory DEFAULT  ('SV:CSIDL_PERSONAL')
%DataPathCSIDLCompanyDir DEFAULT  ('')
%DataPathCSIDLProductDir DEFAULT  ('')
%DataPathCSIDLCreate LONG  (0)
%DataPathOtherDirectory DEFAULT  ('')
%DataPathOtherDirectoryCreate LONG  (0)
%OverrideDoNotAssertOnCloseMisuse DEPEND %File LONG TIMES 1
WHEN  ('') (0)

%VistaManifestdpiAware LONG  (1)
[ADDITION]
NAME UltimateDebug UltimateDebugGlobal
[INSTANCE]
INSTANCE 2
[PROMPTS]
%CLSkelAppDisable LONG  (0)
%gDumpTpl LONG  (0)
%zDumpTpl LONG  (1)
%gDumpVar LONG  (0)
%zDumpVar LONG  (1)
%CLSkelClass DEFAULT  ('UD')
%CLSkelMultiDLL LONG  (0)
%CLSkelMultiDLLData DEFAULT  ('0')
%CLDebugPrefix DEFAULT  ('[ID]')
%CLLogFileName DEFAULT  ('DebugLog.txt')
%UDProcedureAlert DEFAULT  ('CtrlShiftP')
%UDKeyState DEFAULT  ('udKeyState:Shift')
%CLSkelFamily DEFAULT  ('ABC')
%LineWrap DEFAULT  ('0')
%DisableProcedureDebug LONG  (0)
%UDProcAlert DEFAULT  ('CtrlShiftP')
%UDEntryExit LONG  (1)
%DebugOffVariable DEFAULT  ('0')
%ProfileAllFiles LONG  (1)
%UDReportKeyState DEFAULT  ('KeyStateUD:Shift')
%SaveToFileVariable DEFAULT  ('0')
%DoNotSplitLines LONG  (1)
%MultiDLL LONG  (0)
%RootDLL LONG  (0)
[ADDITION]
NAME StringTheory Activate_StringTheory
[INSTANCE]
INSTANCE 3
[PROMPTS]
%NoGloStringTheory LONG  (0)
%md5 LONG  (0)
%MultiDLL LONG  (0)
%RootDLL LONG  (0)
%dClasses8Bx MULTI LONG  (1, 2)
%dClasses8B DEPEND %dClasses8Bx DEFAULT TIMES 2
WHEN  (1) ('STRINGTHEORY')
WHEN  (2) ('STRINGPICTURE')

%dBaseClass DEPEND %dClasses8Bx DEFAULT TIMES 2
WHEN  (1) ('')
WHEN  (2) ('')

%dClassINCFile DEPEND %dClasses8Bx DEFAULT TIMES 2
WHEN  (1) ('STRINGTHEORY.INC')
WHEN  (2) ('STRINGTHEORY.INC')

%dMethods8Cx DEPEND %dClasses8Bx MULTI LONG TIMES 2
WHEN  (1) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, |
  21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, |
  41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, |
  61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, |
  81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, |
  101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, |
  117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, |
  133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, |
  149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, |
  165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, |
  181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, |
  197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, |
  213, 214, 215, 216, 217, 218, 219, 220)
WHEN  (2) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)

%dMethods8C DEPEND %dMethods8Cx DEFAULT TIMES 2
WHEN  (1)TIMES 220
WHEN  (1) ('Destruct {14}Procedure ()')
WHEN  (2) ('Construct {13}Procedure ()')
WHEN  (3) ('Start {17}Procedure(),Virtual')
WHEN  (4) ('AppendA {15}Procedure (string newValue, long pClip = false, <<string pSep>), virtual   ')
WHEN  (5) ('AppendBinary {10}Procedure(long pValue,Long pLength=4),Virtual')
WHEN  (6) ('Append {16}Procedure (string newValue, long pClip = false, <<string pSep>), virtual')
WHEN  (7) ('Append {16}Procedure (*string newValue, long pClip = false, <<string pSep>), virtual')
WHEN  (8) ('SetValue {14}Procedure (string newValue,long pClip=false), virtual')
WHEN  (9) ('_GetNextBufferSize    Procedure (Long pLen),Long,Virtual')
WHEN  (10) ('_SetValuePointer      Procedure (Long pPtr,Long pSize, Long pEnd, Long pDispose=1),Virtual')
WHEN  (11) ('Assign {16}Procedure (*string newValue), virtual')
WHEN  (12) ('Assign {16}Procedure (string newValue), virtual')
WHEN  (13) ('Abbreviate {12}Procedure (Long pPos,Long pRangeLeft = 15,Long pRangeRight = 15),Long,Proc,Virtual')
WHEN  (14) ('GetValuePtr {11}Procedure (),*String,virtual')
WHEN  (15) ('SetValue {14}Procedure (*string newValue,long pClip=false), virtual')
WHEN  (16) ('Base64Encode {10}Procedure (Long pNoWrap=0),Virtual')
WHEN  (17) ('Base64Encode {10}Procedure (*string pText, *long pLen), virtual')
WHEN  (18) ('Base64Decode {10}Procedure (), virtual')
WHEN  (19) ('Base64Decode {10}Procedure (*string pText, *long pLen), virtual')
WHEN  (20) ('QuotedPrintableEncode Procedure (), virtual')
WHEN  (21) ('QuotedPrintableDecode Procedure (), virtual')
WHEN  (22) ('EncodedWordDecode     Procedure (), virtual')
WHEN  (23) ('EncodedWordEncode     Procedure (<<String pCharset>,long pEncoding=2),virtual')
WHEN  (24) ('JsonEncode {12}Procedure (Long pOptions=0), virtual')
WHEN  (25) ('JsonDecode {12}Procedure (), virtual')
WHEN  (26) ('Free {18}Procedure (Long pLines=False, Long pForce=false), virtual')
WHEN  (27) ('FreeLines {13}Procedure (), virtual')
WHEN  (28) ('ClipLen {15}Procedure (), long, virtual')
WHEN  (29) ('ClipLength {12}Procedure (), long, virtual')
WHEN  (30) ('Crop {18}Procedure (ulong pStart=1, ulong pEnd=0), Virtual')
WHEN  (31) ('Instring {14}Procedure (string pSearchValue, long pStep=1, long pStart=1, long pEnd=0, long pNocase=0, long pWholeWord=0), long, virtual')
WHEN  (32) ('Count {17}Procedure (string pSearchValue, long pStep=1, long pStart=1, long pEnd=0, long pNoCase=0, bool softClip=true, long pOverlap=true), long, virtual')
WHEN  (33) ('Capitalize {12}Procedure(long pCount=1, long pStartPos=1, long pEndPos=0,<<String pCharlist>), virtual')
WHEN  (34) ('ErrorTrap {13}Procedure (string methodName, string errorMessage), virtual')
WHEN  (35) ('ExtensionOnly {9}Procedure (<<string fPath>),String, virtual')
WHEN  (36) ('FormatMessage {9}Function (long err), string, virtual')
WHEN  (37) ('GetValue {14}Procedure (), string, virtual')
WHEN  (38) ('GetValue {14}Procedure (long maxLen), string, virtual')
WHEN  (39) ('GetVal {16}Procedure (), string, virtual')
WHEN  (40) ('GetLine {15}Procedure (long pLineNumber), string, virtual')
WHEN  (41) ('GetBufferLength       Procedure(),long,Virtual')
WHEN  (42) ('InLine {16}Procedure (string pSearchValue, long pStep=1, long pStart=1, long pEnd=0, long pNocase=0, long pWholeLine=0, long p_Where=0),Long,virtual')
WHEN  (43) ('SetLine {15}Procedure (long pLineNumber,String pValue),virtual')
WHEN  (44) ('AddLine {15}Procedure (long pLineNumber,String pValue),virtual')
WHEN  (45) ('DeleteLine {12}Procedure(long pLineNumber), long, proc, virtual')
WHEN  (46) ('RemoveLines {11}Procedure(<<String pAlphabet>), long, proc, virtual')
WHEN  (47) ('Join {18}Procedure (string pBoundary,<<string pQuotestart>,<<string pQuoteEnd>),virtual')
WHEN  (48) ('_JoinA {17}Procedure (string pBoundary,<<string pQuotestart>,<<string pQuoteEnd>),virtual ')
WHEN  (49) ('Length {16}Procedure (), long, virtual')
WHEN  (50) ('LengthA {15}Procedure (), long, virtual  ')
WHEN  (51) ('Len {19}Procedure (), long, virtual')
WHEN  (52) ('Chars {17}Procedure(Long pEncoding=-1, <<String pStr>),Long,Virtual ')
WHEN  (53) ('_Malloc {15}Procedure (Long strLen, Long pForce=false, Long pSilent=true), virtual')
WHEN  (54) ('MD5 {19}Procedure (), string, virtual')
WHEN  (55) ('Prepend {15}Procedure (string newValue, long pClip = false, <<string pSep>), virtual')
WHEN  (56) ('Random {16}Procedure (long pLength=16, long pFlags=0, <<String pAlphabet>),String, Proc, virtual')
WHEN  (57) ('MakeGuid {14}Procedure (long pLength=16, long pFlags=st:Upper+st:Number),String, Proc, virtual')
WHEN  (58) ('Records {15}Procedure (), long, virtual')
WHEN  (59) ('Replace {15}Procedure (string pOldValue, string pNewValue, long pCount=0, long pStart=1, long pEnd=0, long pNoCase=0, bool pRecursive=false), Long, Proc, virtual')
WHEN  (60) ('SetLength {13}Procedure (Long strLen, Long pForce=false), virtual')
WHEN  (61) ('Slice {17}Procedure (ulong pStart=1, ulong pEnd=0),String, virtual')
WHEN  (62) ('Split {17}Procedure (string pSplitStr,<<string pQuotestart>,<<string pQuoteEnd>, bool removeQuotes = false, bool pClip = false, bool pLeft=false, <<string pSeparator>,Long pNested=false), virtual')
WHEN  (63) ('Sort {18}Procedure (Long pSortType,string pSplitStr,<<string pQuotestart>,<<string pQuoteEnd>, bool pClip = false, bool pLeft=false),Virtual')
WHEN  (64) ('Sort {18}Procedure (Long pSortType),Virtual')
WHEN  (65) ('SplitEvery {12}Procedure (long numChars), virtual')
WHEN  (66) ('Filter {16}Procedure(string pInclude, string pExclude),virtual')
WHEN  (67) ('Sub {19}Procedure (ulong pStart=1, ulong pLength=1), string, virtual')
WHEN  (68) ('ToCstring {13}Procedure (), *cstring, virtual')
WHEN  (69) ('Trace {17}Procedure (<<string errMsg>), virtual')
WHEN  (70) ('Upper {17}Procedure (<<String pQuote>, <<String pQuoteEnd>), virtual')
WHEN  (71) ('Lower {17}Procedure (<<String pQuote>, <<String pQuoteEnd>), virtual')
WHEN  (72) ('FileNameOnly {10}Procedure (<<string fPath>,Long pIncludeExtension=true), string, virtual')
WHEN  (73) ('PathOnly {14}Procedure (<<string fPath>), string, virtual')
WHEN  (74) ('LoadFile {14}Procedure (string fileName,Long pOffset=0, Long pLength=0, Long pRemoveBOM=false), long, proc, virtual')
WHEN  (75) ('SaveFile {14}Procedure (string fileName, bool pAppendFlag=false), long, proc, virtual')
WHEN  (76) ('SaveFile {14}Procedure (*string WriteString, string fileName, bool pAppendFlag, long dataLen=0), long, proc, virtual')
WHEN  (77) ('SaveFileA {13}Procedure (string WriteString, string fileName, bool pAppendFlag=false), long, proc, virtual')
WHEN  (78) ('SetEncodingFromBOM    Procedure(Long pRemoveBOM=true),Long,Proc,Virtual')
WHEN  (79) ('AddBOM {16}Procedure(Long pEncoding=-1),Virtual')
WHEN  (80) ('Before {16}Procedure (string pSearchValue, long pStart=1, long pEnd=0, long pNoCase=0), string, virtual')
WHEN  (81) ('Between {15}Procedure (string pLeft, string pRight,long pStart=1, long pEnd=0, long pNoCase=0, long pExclusive=true), string, virtual')
WHEN  (82) ('FindBetween {11}Procedure (string pLeft, string pRight, *long pStart, *long pEnd, bool pNoCase=false, long pExclusive=true), string, virtual')
WHEN  (83) ('After {17}Procedure (string pSearchValue, long pStart=1, long pEnd=0, long pNoCase=0), string, virtual')
WHEN  (84) ('ToBlob {16}Procedure (*blob blobField), long, proc, virtual')
WHEN  (85) ('FromBlob {14}Procedure (*blob blobField), long, proc, virtual')
WHEN  (86) ('AnsiToUtf16 {11}Procedure (*string strAnsi, *long unicodeChars, ulong CodePage=st:CP_US_ASCII), *string, virtual')
WHEN  (87) ('Utf16ToAnsi {11}Procedure (*string unicodeString, *long ansiLen, long unicodeChars=-1, ulong CodePage=st:CP_US_ASCII), *string, virtual')
WHEN  (88) ('Utf8To16 {14}Procedure (*string strUtf8, *long unicodeChars), *string, virtual')
WHEN  (89) ('Utf16To8 {14}Procedure (*string unicodeString, *long utf8Len, long unicodeChars=-1), *string, virtual')
WHEN  (90) ('Utf8ToAnsi {12}Procedure (*string strUtf8, *long ansiLen, ulong pCodePage=st:CP_US_ASCII), *string, virtual')
WHEN  (91) ('AnsiToUtf8 {12}Procedure (*string strAnsi, *long utf8Len, ulong pCodePage=st:CP_US_ASCII), *string, virtual')
WHEN  (92) ('apiUtf8ToAnsi {9}Procedure (*string strUtf8, *long ansiLen), *string, virtual')
WHEN  (93) ('apiAnsiToUtf8 {9}Procedure (*string strAnsi, *long utf8Len), *string, virtual')
WHEN  (94) ('ToAnsi {16}Procedure (long encoding=0, ulong pCodePage=st:CP_US_ASCII), long, proc, virtual')
WHEN  (95) ('ToUnicode {13}Procedure (long encoding=st:EncodeUtf8, ulong pCodePage=st:CP_US_ASCII), long, proc, virtual')
WHEN  (96) ('DecodeHexInline       Procedure (ulong pCodePage=st:CP_US_ASCII),Virtual')
WHEN  (97) ('DecodeHexInline       Procedure (string pId, Long pLength, ulong pCodePage=st:CP_US_ASCII),Virtual')
WHEN  (98) ('Utf16ToUtf8Char       Procedure (String p_utf16Char,*Long rLen),String,Virtual')
WHEN  (99) ('Normalize {13}Procedure (Long pForm=st:NFKD,Long pPreserveEncoding=true),Long,Proc,Virtual')
WHEN  (100) ('DecToBase {13}Procedure (long num, long base=16, long lowerCase=1), string, virtual')
WHEN  (101) ('BaseToDec {13}Procedure (string num, long base=16), long, virtual')
WHEN  (102) ('ByteToHex {13}Procedure (byte pByte), string, virtual')
WHEN  (103) ('HexToByte {13}Procedure (string hexVal), byte, virtual')
WHEN  (104) ('LongToHex {13}Procedure (long pLong), string, virtual')
WHEN  (105) ('StringToHex {11}Procedure (string binData,Long pLen=0,Long pCase=0), *string, virtual')
WHEN  (106) ('HexToString {11}Procedure (string hexData), *string, virtual')
WHEN  (107) ('ToHex {17}Procedure (Long pCase=0), virtual     ')
WHEN  (108) ('FromHex {15}Procedure (), virtual')
WHEN  (109) ('WrapText {14}Procedure(long wrapAt=80, bool keepExistingBreaks=true, bool pleft=false), virtual')
WHEN  (110) ('StrCpy {16}Procedure(*string pIn, *string pOut, bool pClip = true), long, proc, virtual')
WHEN  (111) ('ToBytes {15}Procedure (*byte pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (112) ('ToBytes {15}Procedure (*short pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (113) ('ToBytes {15}Procedure (*ushort pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (114) ('ToBytes {15}Procedure (*long pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (115) ('ToBytes {15}Procedure (*ulong pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (116) ('ToBytes {15}Procedure (*sreal pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (117) ('ToBytes {15}Procedure (*real pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (118) ('ToBytes {15}Procedure (*decimal pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (119) ('ToBytes {15}Procedure (*cstring pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (120) ('ToBytes {15}Procedure (*pstring pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (121) ('ToBytes {15}Procedure (*string pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (122) ('FromBytes {13}Procedure (*string pSrc, *byte pDest, long pOffset=1), virtual')
WHEN  (123) ('FromBytes {13}Procedure (*string pSrc, *short pDest, long pOffset=1), virtual')
WHEN  (124) ('FromBytes {13}Procedure (*string pSrc, *ushort pDest, long pOffset=1), virtual')
WHEN  (125) ('FromBytes {13}Procedure (*string pSrc, *long pDest, long pOffset=1), virtual')
WHEN  (126) ('FromBytes {13}Procedure (*string pSrc, *ulong pDest, long pOffset=1), virtual')
WHEN  (127) ('FromBytes {13}Procedure (*string pSrc, *sreal pDest, long pOffset=1), virtual')
WHEN  (128) ('FromBytes {13}Procedure (*string pSrc, *real pDest, long pOffset=1), virtual')
WHEN  (129) ('FromBytes {13}Procedure (*string pSrc, *decimal pDest, long pOffset=1), virtual')
WHEN  (130) ('FromBytes {13}Procedure (*string pSrc, *cstring pDest, long pOffset=1), virtual')
WHEN  (131) ('FromBytes {13}Procedure (*string pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (132) ('FromBytes {13}Procedure (*string pSrc, *pstring pDest, long pOffset=1), virtual')
WHEN  (133) ('SetBytes {14}Procedure (*byte pSrc), virtual')
WHEN  (134) ('SetBytes {14}Procedure (*short pSrc), virtual')
WHEN  (135) ('SetBytes {14}Procedure (*ushort pSrc), virtual')
WHEN  (136) ('SetBytes {14}Procedure (*long pSrc), virtual')
WHEN  (137) ('SetBytes {14}Procedure (*ulong pSrc), virtual')
WHEN  (138) ('SetBytes {14}Procedure (*sreal pSrc), virtual')
WHEN  (139) ('SetBytes {14}Procedure (*real pSrc), virtual')
WHEN  (140) ('SetBytes {14}Procedure (*decimal pSrc), virtual')
WHEN  (141) ('SetBytes {14}Procedure (*cstring pSrc), virtual')
WHEN  (142) ('SetBytes {14}Procedure (*string pSrc), virtual')
WHEN  (143) ('SetBytes {14}Procedure (*pstring pSrc), virtual')
WHEN  (144) ('GetBytes {14}Procedure (*byte pVal, long pOffset=1), virtual')
WHEN  (145) ('GetBytes {14}Procedure (*short pVal, long pOffset=1), virtual')
WHEN  (146) ('GetBytes {14}Procedure (*ushort pVal, long pOffset=1), virtual')
WHEN  (147) ('GetBytes {14}Procedure (*long pVal, long pOffset=1), virtual')
WHEN  (148) ('GetBytes {14}Procedure (*ulong pVal, long pOffset=1), virtual')
WHEN  (149) ('GetBytes {14}Procedure (*sreal pVal, long pOffset=1), virtual')
WHEN  (150) ('GetBytes {14}Procedure (*real pVal, long pOffset=1), virtual')
WHEN  (151) ('GetBytes {14}Procedure (*decimal pVal, long pOffset=1), virtual')
WHEN  (152) ('GetBytes {14}Procedure (*cstring pVal, long pOffset=1), virtual')
WHEN  (153) ('GetBytes {14}Procedure (*string pVal, long pOffset=1), virtual')
WHEN  (154) ('GetBytes {14}Procedure (*pstring pVal, long pOffset=1), virtual')
WHEN  (155) ('SetBytes {14}Procedure (*? pVal, string pType, long pOffset=1), bool, proc, virtual')
WHEN  (156) ('GetBytes {14}Procedure (*? pVal, string pType, long pOffset=1), bool, proc, virtual')
WHEN  (157) ('FindWord {14}Procedure(long pWordNumber,long startPos = -1, long textType=ST:TEXT,*Long pStart, *Long pEnd,<<String pCharlist>), string, virtual')
WHEN  (158) ('GetWord {15}Procedure (long pWordNumber,long startPos = -1, long textType=ST:TEXT, <<String pCharlist>), string, virtual')
WHEN  (159) ('WordStart {13}Procedure (long pStartPos=1, long textType=ST:TEXT,Long pDir=st:Forwards,<<String pCharlist>), long, virtual')
WHEN  (160) ('WordEnd {15}Procedure (long pStartPos=1, long textType=ST:TEXT,<<String pCharlist>), long, virtual')
WHEN  (161) ('CountWords {12}Procedure (long startPos = 1, long textType=ST:TEXT,<<String pCharlist>), long, virtual')
WHEN  (162) ('RemoveAttributes      Procedure (String pTag), virtual')
WHEN  (163) ('RemoveXMLPrefixes     Procedure(), virtual')
WHEN  (164) ('HtmlEntityToDec       Procedure(),virtual')
WHEN  (165) ('DecEntityToChar       Procedure(),Long,Virtual')
WHEN  (166) ('Remove {16}Procedure(string pLeft,<<string pRight>,long pNoCase=0,long pContentsOnly=0, long pCount=0), Long,Proc,virtual')
WHEN  (167) ('Clip {18}Procedure (), virtual')
WHEN  (168) ('Trim {18}Procedure (), virtual')
WHEN  (169) ('Reverse {15}Procedure (String pString),String,Proc Virtual')
WHEN  (170) ('Reverse {15}Procedure (),Virtual')
WHEN  (171) ('Left {18}Procedure(Long pLength=0,Long pwhat=1,<<String pPad>),String, virtual')
WHEN  (172) ('SetLeft {15}Procedure(Long pLength=0,Long pwhat=1,<<String pPad>), virtual')
WHEN  (173) ('Right {17}Procedure(Long pLength=0,Long pwhat=1,<<String pPad>),String, virtual')
WHEN  (174) ('SetRight {14}Procedure(Long pLength=0,Long pwhat=1,<<String pPad>), virtual')
WHEN  (175) ('All {19}Procedure(Long pLength=255),String, virtual')
WHEN  (176) ('SetAll {16}Procedure(Long pLength=255), virtual')
WHEN  (177) ('Squeeze {15}Procedure (long textType=ST:TEXT,<<String pCharlist>), virtual')
WHEN  (178) ('ContainsADigit        Procedure (), bool, virtual')
WHEN  (179) ('IsAllDigits {11}Procedure (), bool, virtual')
WHEN  (180) ('ContainsA {13}Procedure (String pAlphabet, <<String pTestString>,Long pClip=true), bool, virtual')
WHEN  (181) ('IsAll {17}Procedure (String pAlphabet, <<String pTestString>,Long pClip=true), bool, virtual')
WHEN  (182) ('RemoveChars {11}Procedure (String pAlphabet), long, proc, virtual')
WHEN  (183) ('KeepChars {13}Procedure (String pAlphabet), long, proc, virtual')
WHEN  (184) ('_SwitchEndian {9}Procedure (), virtual')
WHEN  (185) ('BigEndian {13}Procedure (), virtual')
WHEN  (186) ('LittleEndian {10}Procedure (), virtual')
WHEN  (187) ('SwitchEndian {10}Procedure (ulong x), long, virtual')
WHEN  (188) ('BigEndian {13}Procedure (ulong x), long, virtual')
WHEN  (189) ('LittleEndian {10}Procedure (ulong x), long, virtual')
WHEN  (190) ('ReverseByteOrder      Procedure (), virtual')
WHEN  (191) ('Str {19}Procedure (), string, virtual')
WHEN  (192) ('Str {19}Procedure (string newValue),  string, proc, virtual')
WHEN  (193) ('Str {19}Procedure (*string newValue), string, proc, virtual')
WHEN  (194) ('SetSlice {14}Procedure (ulong pStart=1, ulong pEnd=0, string newValue), virtual')
WHEN  (195) ('Insert {16}Procedure (long pStart, string insertValue), virtual')
WHEN  (196) ('Quote {17}Procedure (<<string pQuotestart>,<<string pQuoteEnd>), virtual')
WHEN  (197) ('UnQuote {15}Procedure (<<string pQuotestart>,<<string pQuoteEnd>), virtual')
WHEN  (198) ('FindChar {14}Procedure (string pSearchValue, long pStart=1, long pEnd=0, <<String p_Text>), long, virtual')
WHEN  (199) ('FindChars {13}Procedure (*string pSearchValue, long pStart=1, long pEnd=0, <<String p_Text>), long, virtual')
WHEN  (200) ('FindChars {13}Procedure (string pSearchValue, long pStart=1, long pEnd=0, <<String p_Text>), long, virtual')
WHEN  (201) ('ColorToHex {12}Function (long claColor, bool addHash=false), string, virtual')
WHEN  (202) ('ColorFromHex {10}Function (string hexCol), long, virtual')
WHEN  (203) ('UrlEncode {13}Procedure (long flags =0,<<String pDelimiter>,<<String pSpace>), virtual')
WHEN  (204) ('UrlDecode {13}Procedure (<<String pDelimiter>,<<String pSpace>), virtual')
WHEN  (205) ('CleanFileName {9}Procedure (<<string pFileName>, <<string pReplaceChar>), string, proc, virtual')
WHEN  (206) ('PeekRam {15}Procedure(uLong pAdr,Long pLen),Virtual')
WHEN  (207) ('loadlibs {14}Procedure(),Long,Proc,Virtual')
WHEN  (208) ('LoadNormalize {9}Procedure(),Long,Proc,Virtual')
WHEN  (209) ('gzip {18}Procedure(Long pLevel=5),Long,Virtual,Proc')
WHEN  (210) ('gunzip {16}Procedure(),Long,Virtual,Proc')
WHEN  (211) ('MergeXml {14}Procedure(String pNew, Long pWhere),Virtual')
WHEN  (212) ('LineEndings {11}Procedure(Long pEndings=1), Virtual')
WHEN  (213) ('IsTime {16}PROCEDURE (String pValue),Long, Virtual')
WHEN  (214) ('IsTime {16}PROCEDURE (),Long, Virtual')
WHEN  (215) ('DeformatTime {10}PROCEDURE (String pValue),String, Virtual')
WHEN  (216) ('DeformatTime {10}PROCEDURE (),Virtual')
WHEN  (217) ('FormatTime {12}PROCEDURE (String pFormat),Virtual')
WHEN  (218) ('FormatTime {12}PROCEDURE (Long pValue,string pFormat),String,Virtual')
WHEN  (219) ('StartsWith {12}Procedure (String pStr,Long pCase=True,Long pClip=True),Long,Virtual')
WHEN  (220) ('EndsWith {14}Procedure (String pStr,Long pCase=True,Long pClip=True),Long,Virtual')
WHEN  (2)TIMES 18
WHEN  (1) ('CreatePicture {11}Procedure(String pType),String,Virtual')
WHEN  (2) ('CreateDatePicture        Procedure(),String,Proc,Virtual')
WHEN  (3) ('CreateTimePicture        Procedure(),String,Proc,Virtual')
WHEN  (4) ('CreateStringPicture      Procedure(),String,Proc,Virtual')
WHEN  (5) ('CreateScientificPicture  Procedure(),String,Proc,Virtual')
WHEN  (6) ('CreateNumericPicture     Procedure(),String,Proc,Virtual')
WHEN  (7) ('CreatePatternPicture     Procedure(),String,Proc,Virtual')
WHEN  (8) ('CreateKeyInPicture       Procedure(),String,Proc,Virtual')
WHEN  (9) ('ParsePicture {12}Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (10) ('ParseDatePicture        Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (11) ('ParseTimePicture        Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (12) ('ParseStringPicture      Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (13) ('ParseScientificPicture  Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (14) ('ParseNumericPicture     Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (15) ('ParsePatternPicture     Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (16) ('ParseKeyInPicture       Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (17) ('_block {18}Procedure(String pPic, String pAlphabet,*Long pPos),String,Virtual')
WHEN  (18) ('_blockbound {13}Procedure(String pPic, String pBoundary,*Long pPos),String,Virtual')

%dClassVersion DEFAULT  ('78769')
[ADDITION]
NAME EasyResizeAndSplit ActiveEasyResizeAndSplit
[INSTANCE]
INSTANCE 12
[PROMPTS]
%DisableRAS LONG  (0)
%GloERSGrabCorner LONG  (1)
%GloERSGrabCornerStyle DEFAULT  ('Ras:CornerDots')
%VertCursor DEFAULT  ('Cursor:SizeWE')
%HorizCursor DEFAULT  ('Cursor:SizeNS')
%ERSControlCollectionQ MULTI LONG  (1, 2)
%ERSControlCollection DEPEND %ERSControlCollectionQ DEFAULT TIMES 2
WHEN  (1) ('LIST')
WHEN  (2) ('BUTTON')

%DefCheckStrategy DEPEND %ERSControlCollectionQ LONG TIMES 0

%DefParentStrategyControl DEPEND %ERSControlCollectionQ DEFAULT TIMES 2
WHEN  (1) ('1')
WHEN  (2) ('1')

%DefXStrategy DEPEND %ERSControlCollectionQ DEFAULT TIMES 2
WHEN  (1) ('Resize')
WHEN  (2) ('Move')

%DefXMove DEPEND %ERSControlCollectionQ DEFAULT TIMES 2
WHEN  (1) ('0')
WHEN  (2) ('100')

%DefXResize DEPEND %ERSControlCollectionQ DEFAULT TIMES 2
WHEN  (1) ('100')
WHEN  (2) ('0')

%DefYStrategy DEPEND %ERSControlCollectionQ DEFAULT TIMES 2
WHEN  (1) ('Resize')
WHEN  (2) ('Move')

%DefYMove DEPEND %ERSControlCollectionQ DEFAULT TIMES 2
WHEN  (1) ('0')
WHEN  (2) ('100')

%DefYResize DEPEND %ERSControlCollectionQ DEFAULT TIMES 2
WHEN  (1) ('100')
WHEN  (2) ('0')

%MultiDLL LONG  (0)
%RootDLL LONG  (0)
%dClasses8Bx MULTI LONG  (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
%dClasses8B DEPEND %dClasses8Bx DEFAULT TIMES 12
WHEN  (1) ('CSRESIZEANDSPLITBASECLASS')
WHEN  (2) ('CSRESIZEANDSPLITIMMCLASS')
WHEN  (3) ('CSRESIZEANDSPLITCLASS')
WHEN  (4) ('CSRESIZECLASS')
WHEN  (5) ('CSSPLITCLASS')
WHEN  (6) ('CSVSPLITCLASS')
WHEN  (7) ('CSHSPLITCLASS')
WHEN  (8) ('CSSPLITIMAGECLASS')
WHEN  (9) ('EASYAPPWINDOW')
WHEN  (10) ('EASYMDIWINDOW')
WHEN  (11) ('EASYTOOLBARWINDOW')
WHEN  (12) ('ERSQUEUEMANAGER')

%dBaseClass DEPEND %dClasses8Bx DEFAULT TIMES 6
WHEN  (2) ('csResizeAndSplitBaseClass')
WHEN  (3) ('csResizeAndSplitBaseClass')
WHEN  (4) ('csResizeAndSplitClass')
WHEN  (5) ('csResizeAndSplitClass')
WHEN  (6) ('csSplitClass')
WHEN  (7) ('csSplitClass')

%dClassINCFile DEPEND %dClasses8Bx DEFAULT TIMES 12
WHEN  (1) ('RESIZEANDSPLIT.INC')
WHEN  (2) ('RESIZEANDSPLIT.INC')
WHEN  (3) ('RESIZEANDSPLIT.INC')
WHEN  (4) ('RESIZEANDSPLIT.INC')
WHEN  (5) ('RESIZEANDSPLIT.INC')
WHEN  (6) ('RESIZEANDSPLIT.INC')
WHEN  (7) ('RESIZEANDSPLIT.INC')
WHEN  (8) ('RESIZEANDSPLIT.INC')
WHEN  (9) ('RESIZEANDSPLIT.INC')
WHEN  (10) ('RESIZEANDSPLIT.INC')
WHEN  (11) ('RESIZEANDSPLIT.INC')
WHEN  (12) ('RESIZEANDSPLIT.INC')

%dMethods8Cx DEPEND %dClasses8Bx MULTI LONG TIMES 12
WHEN  (1) (1, 2, 3, 4, 5)
WHEN  (2) (1)
WHEN  (3) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)
WHEN  (4) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, |
  21, 22, 23, 24, 25, 26, 27)
WHEN  (5) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, |
  21, 22, 23, 24)
WHEN  (6) (1, 2, 3, 4, 5, 6, 7, 8)
WHEN  (7) (1, 2, 3, 4, 5, 6, 7, 8)
WHEN  (8) (1, 2, 3, 4, 5, 6, 7, 8)
WHEN  (9) (1, 2, 3, 4, 5, 6, 7)
WHEN  (10) (1, 2, 3, 4, 5, 6, 7)
WHEN  (11) (1, 2, 3, 4, 5, 6, 7, 8, 9)
WHEN  (12) (1, 2, 3, 4)

%dMethods8C DEPEND %dMethods8Cx DEFAULT TIMES 12
WHEN  (1)TIMES 5
WHEN  (1) ('Destruct {21}PROCEDURE()')
WHEN  (2) ('Trace {24}PROCEDURE(String pStr),VIRTUAL')
WHEN  (3) ('InitSubProc {18}PROCEDURE(UNSIGNED hWnd),VIRTUAL')
WHEN  (4) ('ProcessMessage {15}PROCEDURE(UNSIGNED hWnd,UNSIGNED uMsg, UNSIGNED wParam, LONG lParam),LONG,VIRTUAL')
WHEN  (5) ('KillSubProc {18}PROCEDURE(),VIRTUAL')
WHEN  (2)TIMES 1
WHEN  (1) ('ProcessMessage {15}PROCEDURE(UNSIGNED hWnd,UNSIGNED uMsg, UNSIGNED wParam, LONG lParam),LONG,VIRTUAL')
WHEN  (3)TIMES 14
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Destruct {18}PROCEDURE()')
WHEN  (3) ('Initialize {16}PROCEDURE(Window W),VIRTUAL')
WHEN  (4) ('Init {22}PROCEDURE(),VIRTUAL')
WHEN  (5) ('Resize {20}PROCEDURE(),VIRTUAL')
WHEN  (6) ('Reset {21}PROCEDURE(),VIRTUAL')
WHEN  (7) ('AddControl {16}PROCEDURE(SIGNED Control,*ERS_RECT Pos,UNSIGNED hWnd),VIRTUAL')
WHEN  (8) ('Fetch {21}PROCEDURE(),VIRTUAL')
WHEN  (9) ('Update {20}PROCEDURE(),VIRTUAL')
WHEN  (10) ('ChangeControl {13}PROCEDURE(SIGNED Control,SIGNED NewControl,UNSIGNED hWnd),VIRTUAL')
WHEN  (11) ('DeleteControl {13}PROCEDURE(SIGNED Control),VIRTUAL')
WHEN  (12) ('GetPosition {15}PROCEDURE(UNSIGNED hWnd,ERS_RECT Pos,UNSIGNED hParentWnd=0),VIRTUAL')
WHEN  (13) ('Open {22}PROCEDURE(),VIRTUAL')
WHEN  (14) ('ResetSetting {14}PROCEDURE(),VIRTUAL')
WHEN  (4)TIMES 27
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Destruct {18}PROCEDURE()')
WHEN  (3) ('ProcessMessage {12}PROCEDURE(UNSIGNED hWnd,UNSIGNED uMsg, UNSIGNED wParam, LONG lParam),LONG,VIRTUAL')
WHEN  (4) ('Init {22}PROCEDURE(STRING Name,Window W,BYTE IsMinSetting=1,LONG TypeResize=0),VIRTUAL')
WHEN  (5) ('GrabCornerLines {11}PROCEDURE(),VIRTUAL')
WHEN  (6) ('DrawHandle {16}PROCEDURE(),VIRTUAL')
WHEN  (7) ('DrawHandleLines {11}Procedure(),VIRTUAL')
WHEN  (8) ('DrawHandleDots {12}Procedure(),VIRTUAL')
WHEN  (9) ('Strategy {18}PROCEDURE(SIGNED Control,REAL XPercent=255,REAL YPercent=255,REAL WPercent=255,REAL HPercent=255),VIRTUAL')
WHEN  (10) ('Strategy {18}PROCEDURE(SIGNED Control,SIGNED ParentControl),VIRTUAL')
WHEN  (11) ('FillRecord {16}PROCEDURE(),VIRTUAL')
WHEN  (12) ('Register {18}PROCEDURE(csSplitClass Split),VIRTUAL')
WHEN  (13) ('Resize {20}PROCEDURE(),VIRTUAL')
WHEN  (14) ('Sized {21}PROCEDURE(),VIRTUAL')
WHEN  (15) ('Reset {21}PROCEDURE(),VIRTUAL')
WHEN  (16) ('Fetch {21}PROCEDURE(),VIRTUAL')
WHEN  (17) ('Update {20}PROCEDURE(),VIRTUAL')
WHEN  (18) ('Fetch {21}PROCEDURE(STRING Sect,STRING Ent,*? Val),VIRTUAL')
WHEN  (19) ('Update {20}PROCEDURE(STRING Sect,STRING Ent,STRING Val),VIRTUAL')
WHEN  (20) ('ChangeControl {13}PROCEDURE(SIGNED Control,SIGNED NewControl,UNSIGNED hWnd),VIRTUAL')
WHEN  (21) ('DeleteControl {13}PROCEDURE(SIGNED Control),VIRTUAL')
WHEN  (22) ('GetControl {16}PROCEDURE(SIGNED Control),SIGNED,VIRTUAL')
WHEN  (23) ('GethControlWnd {12}PROCEDURE(SIGNED Control),UNSIGNED,VIRTUAL')
WHEN  (24) ('IsSized {19}PROCEDURE(),BYTE,VIRTUAL')
WHEN  (25) ('Open {22}PROCEDURE(),VIRTUAL')
WHEN  (26) ('TakeEvent {17}PROCEDURE(),VIRTUAL')
WHEN  (27) ('ResetSetting {14}PROCEDURE(),VIRTUAL')
WHEN  (5)TIMES 24
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Destruct {18}PROCEDURE()')
WHEN  (3) ('Init {22}PROCEDURE(STRING Name,csResizeClass Resizer,SIGNED Control,STRING SplitType,BYTE IsResize=0),VIRTUAL')
WHEN  (4) ('InitFixedControls {9}PROCEDURE(SIGNED upControl=0,SIGNED DownControl=0),VIRTUAL')
WHEN  (5) ('MovedControl {14}PROCEDURE(SIGNED Control),VIRTUAL')
WHEN  (6) ('ResizedControl {12}PROCEDURE(SIGNED Control),VIRTUAL')
WHEN  (7) ('InitControl {15}PROCEDURE(SIGNED Control,BYTE IsMoved=0),VIRTUAL')
WHEN  (8) ('Invert {20}PROCEDURE(UNSIGNED hWnd,ERS_RECT Pos,BYTE Close=0),VIRTUAL')
WHEN  (9) ('ProcessMessage {12}PROCEDURE(UNSIGNED hWnd,UNSIGNED uMsg, UNSIGNED wParam, LONG lParam),LONG,VIRTUAL')
WHEN  (10) ('CalculateScope {12}PROCEDURE(),VIRTUAL')
WHEN  (11) ('Moved {21}PROCEDURE(UNSIGNED phWnd,LONG plParam),VIRTUAL')
WHEN  (12) ('DeleteControl {13}PROCEDURE(SIGNED Control),VIRTUAL')
WHEN  (13) ('ChangeControl {13}PROCEDURE(SIGNED Control,SIGNED NewControl,UNSIGNED hWnd),VIRTUAL')
WHEN  (14) ('Resize {20}PROCEDURE(),VIRTUAL')
WHEN  (15) ('GainFocus {17}PROCEDURE(),VIRTUAL')
WHEN  (16) ('LoseFocus {17}PROCEDURE(),VIRTUAL')
WHEN  (17) ('Down {22}PROCEDURE(),VIRTUAL')
WHEN  (18) ('IsMoved {19}PROCEDURE(),BYTE,VIRTUAL')
WHEN  (19) ('AlignmentMove {13}PROCEDURE(LONG Pos,SIGNED Control),VIRTUAL')
WHEN  (20) ('AlignmentResize {11}PROCEDURE(LONG Pos,SIGNED Control),VIRTUAL')
WHEN  (21) ('Alignment {17}PROCEDURE(LONG Pos,SIGNED Control,QAlignmentERS Q),VIRTUAL')
WHEN  (22) ('GetUpPos {18}PROCEDURE(),SIGNED,VIRTUAL')
WHEN  (23) ('GetDownPos {16}PROCEDURE(),SIGNED,VIRTUAL')
WHEN  (24) ('SetDownPos {16}PROCEDURE(LONG Pos),VIRTUAL')
WHEN  (6)TIMES 8
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Init {22}PROCEDURE(),VIRTUAL')
WHEN  (3) ('InitControl {15}PROCEDURE(SIGNED Control,BYTE IsMoved=0),VIRTUAL')
WHEN  (4) ('Resize {20}PROCEDURE(),VIRTUAL')
WHEN  (5) ('Fetch {21}PROCEDURE(),VIRTUAL')
WHEN  (6) ('Update {20}PROCEDURE(),VIRTUAL')
WHEN  (7) ('CalculateScope {12}PROCEDURE(),VIRTUAL')
WHEN  (8) ('Moved {21}PROCEDURE(UNSIGNED phWnd,LONG plParam),VIRTUAL')
WHEN  (7)TIMES 8
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Init {22}PROCEDURE(),VIRTUAL')
WHEN  (3) ('InitControl {15}PROCEDURE(SIGNED Control,BYTE IsMoved=0),VIRTUAL')
WHEN  (4) ('Resize {20}PROCEDURE(),VIRTUAL')
WHEN  (5) ('Fetch {21}PROCEDURE(),VIRTUAL')
WHEN  (6) ('Update {20}PROCEDURE(),VIRTUAL')
WHEN  (7) ('CalculateScope {12}PROCEDURE(),VIRTUAL')
WHEN  (8) ('Moved {21}PROCEDURE(UNSIGNED phWnd,LONG plParam),VIRTUAL')
WHEN  (8)TIMES 8
WHEN  (1) ('Init {22}PROCEDURE(csSplitClass Split,STRING ImageFile)')
WHEN  (2) ('SelectImageFile {11}PROCEDURE(STRING ImageFile)')
WHEN  (3) ('PressImageFile {12}PROCEDURE(STRING ImageFile)')
WHEN  (4) ('Resize {20}PROCEDURE()')
WHEN  (5) ('Position {18}PROCEDURE(ERS_RECT Pos)')
WHEN  (6) ('GainFocus {17}PROCEDURE()')
WHEN  (7) ('LoseFocus {17}PROCEDURE()')
WHEN  (8) ('Down {22}PROCEDURE()')
WHEN  (9)TIMES 7
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Destruct {18}PROCEDURE()')
WHEN  (3) ('Init {22}PROCEDURE(Window W)')
WHEN  (4) ('AddQ {22}PROCEDURE(EasyMDIWindow obj)')
WHEN  (5) ('DelQ {22}PROCEDURE(EasyMDIWindow obj)')
WHEN  (6) ('TakeEvent {17}PROCEDURE()')
WHEN  (7) ('Selected {18}PROCEDURE(UNSIGNED hWnd)')
WHEN  (10)TIMES 7
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Destruct {18}PROCEDURE()')
WHEN  (3) ('Init {22}PROCEDURE(Window W,EasyAPPWindow obj,<<csResizeClass Resizer>)')
WHEN  (4) ('TakeEvent {17}PROCEDURE()')
WHEN  (5) ('GetCaption {16}PROCEDURE(),STRING')
WHEN  (6) ('SetCaption {16}PROCEDURE(STRING Txt)')
WHEN  (7) ('Sized {21}PROCEDURE()')
WHEN  (11)TIMES 9
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Destruct {18}PROCEDURE()')
WHEN  (3) ('Init {22}PROCEDURE(Window W,SIGNED Control)')
WHEN  (4) ('Selected {18}PROCEDURE(LONG Pos)')
WHEN  (5) ('Deleted {19}PROCEDURE(LONG Thread=0)')
WHEN  (6) ('Closed {20}PROCEDURE()')
WHEN  (7) ('Sized {21}PROCEDURE(),VIRTUAL')
WHEN  (8) ('NewSelection {14}PROCEDURE(LONG Pos=0)')
WHEN  (9) ('SetFont {19}PROCEDURE(SIGNED Control,ERSMDISettingFont Font)')
WHEN  (12)TIMES 4
WHEN  (1) ('Construct {17}PROCEDURE()')
WHEN  (2) ('Destruct {18}PROCEDURE()')
WHEN  (3) ('Init {22}PROCEDURE(Queue Q)')
WHEN  (4) ('ClearQ {20}PROCEDURE(Queue Q)')

%dClassVersion DEFAULT  ('78769')
%ERSNextLine DEFAULT  ('##END OF FILE##')
%ERSExists DEFAULT  ('')
%ERSRef DEFAULT  ('15')
%ERSBuffer DEFAULT  ('TOOLBAR ')
%ERSTypeCollection UNIQUE DEFAULT  ('BOX ', 'BREAK ', 'BUTTON ', 'CHECK ', 'COMBO ', |
  'CUSTOM ', 'DROPCOMBO ', 'DROPLIST ', 'ELLIPSE ', 'ENTRY ', 'GROUP ', 'IMAGE ', |
  'LINE ', 'LIST ', 'OLE ', 'OPTION ', 'PANEL ', 'PROGRESS ', 'PROMPT ', 'RADIO ', |
  'REGION ', 'RTF ', 'SHEET ', 'SINGLELINE ', 'SPIN ', 'SSTRING ', 'STATE3 ', 'STRING ', |
  'SUBLIST ', 'TEXT ')
[ADDITION]
NAME cwVersionRes cwVersionRes
[INSTANCE]
INSTANCE 1
[PROMPTS]
%verCoName DEFAULT  ('ClarionLive!')
%verCopyright DEFAULT  ('copyright 2016 ClarionLive! all rights reserved')
%verTrademarks DEFAULT  ('Trademark')
%verComments DEFAULT  ('')
%verExtProdVersion LONG  (0)
%verSourceFile DEFAULT  ('')
%verProdName DEFAULT  ('UltimateDebug OverView')
%verProdMajVer DEFAULT  ('16')
%verProdMinVer DEFAULT  ('8')
%verProdSubVer DEFAULT  ('26')
%verProdGenBuildNo LONG  (1)
%verProdBuildNo DEFAULT  ('490')
%verDesc DEFAULT  ('')
%verFileAsProdVersion LONG  (1)
%verIntName DEFAULT  ('UltimateDebug OverView')
%verFileMajVer DEFAULT  ('16')
%verFileMinVer DEFAULT  ('8')
%verFileSubVer DEFAULT  ('26')
%verFileGenBuildNo LONG  (1)
%verFileBuildNo DEFAULT  ('490')
%verFilePreRelease LONG  (0)
%verSelLangID DEFAULT  ('U.S. English')
%verSelCPID DEFAULT  ('Unicode')
%verIncludeCW LONG  (1)
%verClarionVersion DEFAULT  ('10000')
%verTemplateFamily DEFAULT  ('ABC')
%verTemplateVersion DEFAULT  ('v10.0')
%verUserLabel1 DEFAULT  ('')
%verUserValue1 DEFAULT  ('')
%verUserLabel2 DEFAULT  ('')
%verUserValue2 DEFAULT  ('')
%verUserLabel3 DEFAULT  ('')
%verUserValue3 DEFAULT  ('')
%verUserLabel4 DEFAULT  ('')
%verUserValue4 DEFAULT  ('')
[ADDITION]
NAME UltimateClass UltimateClassGlobal
[INSTANCE]
INSTANCE 4
[PROMPTS]
%Classes MULTI LONG  (1)
%Class DEPEND %Classes DEFAULT TIMES 1
WHEN  (1) ('sdkODSMessagePump')

%GlobalClass DEPEND %Classes LONG TIMES 1
WHEN  (1) (1)

%GlobalClassName DEPEND %Classes DEFAULT TIMES 1
WHEN  (1) ('osdkODSMessagePump')

%MultiDLL DEPEND %Classes LONG TIMES 1
WHEN  (1) (0)

%MultiDLLData DEPEND %Classes DEFAULT TIMES 1
WHEN  (1) ('0')

%ProcedureExtensionInit DEPEND %Classes DEFAULT TIMES 0

%ucAppDisable LONG  (0)
%Family DEFAULT  ('abc')
[ADDITION]
NAME WinEvent EnableWinEvent
[INSTANCE]
INSTANCE 6
[PROMPTS]
%GloDisableWinEvent LONG  (0)
%WinEventVersionWasAt DEFAULT  ('3.96')
%gloAutoDown LONG  (1)
%gloHandleCloseDown LONG  (1)
%gloDelayProcessCloseDown LONG  (1)
%gloWindowsVisible LONG  (1)
%gloWinEventDebug LONG  (0)
%gloWinEventMouseWheelCtrl LONG  (1)
%gloNoLiBLink LONG  (0)
%DisableMP LONG  (0)
%MesTextToDebug LONG  (0)
%EnableGloVersionNumberVariable LONG  (1)
%GloVersionNumberVariable DEFAULT  ('Version')
%MultiDLL LONG  (0)
%RootDLL LONG  (0)
%MSBIsHere LONG  (0)
%WEezhIsHere LONG  (0)
%UseWinEventCloseWindow LONG  (0)
[PERSIST]
%SaveCreateLocalMap DEFAULT  ('1')
%GenerationCompleted DEPEND %Module DEFAULT TIMES 4
WHEN  ('UDOverView.clw') ('1')
WHEN  ('UDOverView001.clw') ('1')
WHEN  ('UDOverView002.clw') ('1')
WHEN  ('UDOverView003.clw') ('')

%LastTarget32 DEFAULT  ('1')
%LastProgramExtension DEFAULT  ('EXE')
%LastApplicationDebug DEFAULT  ('1')
%LastApplicationLocalLibrary DEFAULT  ('')
[PROJECT]
-- NAMESPACE InspectorDebug
#system win32 exe
#model clarion dll
#pragma link_option(icon=>UDOverView.ico)
#pragma debug(vid=>full)
#pragma define(StringTheoryLinkMode=>1) -- GENERATED
#pragma define(StringTheoryDllMode=>0) -- GENERATED
#pragma define(MD5=>0) -- GENERATED
#pragma define(_RASLinkMode_=>1) -- GENERATED
#pragma define(_RASDllMode_=>0) -- GENERATED
#pragma define(_ABCDllMode_=>0) -- GENERATED
#pragma define(_ABCLinkMode_=>1) -- GENERATED
#compile "UDOverView.clw" -- GENERATED
#compile "UDOverView001.clw" -- GENERATED
#compile "UDOverView002.clw" -- GENERATED
#compile "EFOCUS.CLW" -- GENERATED
#compile "UDOverView_BC0.CLW" -- GENERATED
#compile "UDOVERVIEW_BC.CLW" -- GENERATED
#compile "UDOverView003.clw" -- GENERATED
#pragma link("C%V%dos%X%%L%.lib") -- GENERATED
#link "UDOverView.EXE"
